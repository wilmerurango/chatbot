# Generated by Django 4.0.5 on 2022-06-11 01:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usuario_bot', models.CharField(choices=[('Si', 'Si'), ('no', 'no')], default='no', max_length=2, null=True, verbose_name='Usuario Bot')),
                ('direccion', models.CharField(max_length=100, null=True, verbose_name='Dirección')),
                ('telefono', models.CharField(max_length=15, null=True, verbose_name='Telefono')),
                ('fecha_creacion', models.DateTimeField(null=True, verbose_name='Fecha Creación')),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Suspendido', 'Suspendido'), ('Inactivo', 'Inactivo')], default='Activo', max_length=12, null=True, verbose_name='Estado')),
                ('colegio', models.CharField(max_length=100, null=True, verbose_name='Colegio')),
                ('grado_cursado', models.CharField(max_length=10, null=True, verbose_name='Grado Cursado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, null=True, verbose_name='Nombre de la Actividad')),
                ('descripcion', models.TextField(verbose_name='Descripción de La Actividad')),
                ('estado', models.IntegerField(verbose_name='Estado de la Actividad')),
                ('fecha_i', models.DateTimeField(verbose_name='Fecha Inicio')),
                ('fecha_f', models.DateTimeField(verbose_name='Fecha Fin')),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_curso', models.CharField(max_length=100, null=True, verbose_name='Nombre de Curso')),
                ('fecha_inicial', models.DateTimeField(verbose_name='Fecha Inicial')),
                ('fecha_final', models.DateTimeField(verbose_name='Fecha Final')),
                ('descripcion', models.TextField(verbose_name='Descripción del Curso')),
                ('estado', models.IntegerField(verbose_name='Estado del Curso')),
            ],
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tema', models.CharField(max_length=50, null=True, verbose_name='Nombre del Tema')),
                ('descripcion', models.TextField(verbose_name='Descripción del Tema')),
                ('estado', models.IntegerField(verbose_name='Estado del Tema')),
            ],
        ),
        migrations.CreateModel(
            name='TipoActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo_actividad', models.CharField(max_length=50, null=True, verbose_name='Nombre Tipo de Actividad')),
                ('fecha_creacion', models.DateTimeField(verbose_name='Fecha Creación')),
                ('estado', models.IntegerField(verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Subtema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, null=True, verbose_name='Nombre Subtema')),
                ('descripcion', models.TextField(verbose_name='Descripción Subtema')),
                ('estado', models.IntegerField(verbose_name='Estado del Subtema')),
                ('tema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.tema', verbose_name='Tema')),
            ],
        ),
        migrations.CreateModel(
            name='CurTemStem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_i', models.DateTimeField(verbose_name='Fecha Inicio')),
                ('fecha_f', models.DateTimeField(verbose_name='Fecha Fin')),
                ('orden', models.IntegerField(verbose_name='Orden')),
                ('curso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.curso', verbose_name='Curso')),
                ('subtema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.subtema', verbose_name='Subtema')),
                ('tema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.tema', verbose_name='Tema')),
            ],
        ),
        migrations.CreateModel(
            name='Conversacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField(verbose_name='Mensaje')),
                ('fecha', models.DateTimeField(verbose_name='Fecha/Hora')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='ActividadDet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.IntegerField(verbose_name='Orden')),
                ('descripcion', models.TextField(verbose_name='Descripción Actividad')),
                ('nota', models.FloatField(verbose_name='Nota')),
                ('actividad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.actividad', verbose_name='Actividad')),
            ],
        ),
        migrations.AddField(
            model_name='actividad',
            name='curTemStem',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.curtemstem', verbose_name='CurTemStem'),
        ),
        migrations.AddField(
            model_name='actividad',
            name='tipoActividad',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.tipoactividad', verbose_name='Tipo de Actividad'),
        ),
        migrations.CreateModel(
            name='ActDetOpt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripción ActDetOpt')),
                ('orden', models.IntegerField(verbose_name='Orden')),
                ('opt_correcta', models.IntegerField(verbose_name='Opción Correcta')),
                ('nota', models.FloatField(verbose_name='Nota')),
                ('actividadDet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='appbot.actividaddet', verbose_name='ActividadDet')),
            ],
        ),
    ]
